{"version":3,"file":"main.8ba0336d0235c78ee0aa.bundle.js","sources":["webpack:///./src/components/base/check/Check.jsx"],"sourcesContent":["import React, { memo, useMemo, useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { uniqueId } from 'lodash';\nimport constants from '../../../constants';\nimport { devlog } from '../../../utils';\n\nconst Check = props => {\n    devlog.info('Check render', props);\n\n    const { id, disabled, label, size, checked, value, status, ...rest } = props;\n    const checkClass = classNames('opus-check', status, {\n        [`opus-check-${size}`]: size\n    });\n\n    const _id = id || useMemo(() => uniqueId('check_'), []);\n    const inputRef = useRef();\n    const checkProps = {\n        ...rest,\n        disabled,\n        value,\n        className: checkClass,\n        defaultChecked: !!checked,\n        id: _id,\n        ref: inputRef,\n        tabIndex: 0,\n        type: 'checkbox'\n    };\n\n    useEffect(() => {\n        inputRef.current.checked = !!checked;\n    }, [checked]);\n\n    return (\n        <div className=\"opus-check-wrapper\">\n            <input {...checkProps} />\n            <label htmlFor={_id}>{label}</label>\n        </div>\n    );\n};\n\nCheck.propTypes = {\n    checked: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n    disabled: PropTypes.bool,\n    id: PropTypes.string,\n    label: PropTypes.string,\n    onChange: PropTypes.func,\n    size: PropTypes.oneOf([constants.SIZE.SMALL, constants.SIZE.MEDIUM]),\n    status: PropTypes.oneOf([constants.STATUS.CHECKED, constants.STATUS.INTERMIDIATE, constants.STATUS.UNCHECKED]),\n    value: PropTypes.string.isRequired\n};\n\nCheck.defaultProps = {\n    checked: false,\n    disabled: false,\n    id: null,\n    label: '',\n    onChange: () => {},\n    size: constants.SIZE.MEDIUM,\n    status: constants.STATUS.CHECKED,\n    value: ''\n};\n\nexport default memo(Check);\n"],"mappings":"AAOA","sourceRoot":""}